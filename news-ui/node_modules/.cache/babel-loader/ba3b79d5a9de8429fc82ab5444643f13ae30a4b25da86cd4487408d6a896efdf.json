{"ast":null,"code":"import NewsService from \"../services/NewsService\";\nimport NYCategoryCard from \"./NYCategoryCard.vue\"; // Import the NewsCard component\nexport default {\n  name: 'NYCategories',\n  data() {\n    return {\n      articles: [],\n      totalResults: 0,\n      category: ''\n    };\n  },\n  components: {\n    NYCategoryCard\n  },\n  mounted() {\n    console.log(\"in categories mounted\");\n    this.fetchNews();\n  },\n  created() {\n    this.category = this.$route.query.category;\n    // Use the 'category' variable in your component logic\n    console.log(`Category received: ${this.category}`);\n  },\n  methods: {\n    getRandomCategoryImage(category) {\n      // Assuming you have 10 images (1.jpg to 10.jpg) for each category\n      const randomImageNumber = Math.floor(Math.random() * 10) + 1;\n      return `../../public/${category}/${randomImageNumber}.jpg`; // Adjust the path to match your folder structure\n    },\n\n    fetchNews() {\n      console.log(\"in categories: \", this.category);\n      NewsService.getNewsType(this.category).then(response => {\n        console.log(\"in categories: service called\");\n        console.log(response);\n        this.articles = response.data;\n        if (this.articles.length > 0) {\n          // console.log(this.articles.at(1).title);\n          console.log(this.articles[0].title);\n          console.log(\"in categories: articles length > 0\");\n          for (const article of this.articles) {\n            if (!article.image) {\n              article.image = this.getRandomCategoryImage(this.category);\n            }\n          }\n        }\n      }).catch(error => {\n        console.error(\"Error fetching data:\", error);\n        console.log(\"in categories: error\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["NewsService","NYCategoryCard","name","data","articles","totalResults","category","components","mounted","console","log","fetchNews","created","$route","query","methods","getRandomCategoryImage","randomImageNumber","Math","floor","random","getNewsType","then","response","length","title","article","image","catch","error"],"sources":["C:\\Users\\fatima.noor\\Desktop\\NewsApi-git\\news-ui\\src\\components\\NYCategories.vue"],"sourcesContent":["<template>\r\n    <h1></h1>\r\n    <div class=\"news-cards\">\r\n        <h1>News Section</h1>\r\n        <div class=\"item\">\r\n            <NYCategoryCard v-for=\"(article, index) in articles\" :key=\"index\" :article=\"article\"></NYCategoryCard>\r\n        </div>\r\n    </div>\r\n</template>\r\n    \r\n<script>\r\nimport NewsService from \"../services/NewsService\"\r\nimport NYCategoryCard from \"./NYCategoryCard.vue\"; // Import the NewsCard component\r\nexport default {\r\n    name: 'NYCategories',\r\n    data() {\r\n        return {\r\n            articles: [],\r\n            totalResults: 0,\r\n            category: '',\r\n        };\r\n    },\r\n    components: {\r\n        NYCategoryCard,\r\n    },\r\n    mounted() {\r\n        console.log(\"in categories mounted\");\r\n        this.fetchNews();\r\n    },\r\n    created() {\r\n        this.category = this.$route.query.category;\r\n        // Use the 'category' variable in your component logic\r\n        console.log(`Category received: ${this.category}`);\r\n    },\r\n\r\n    methods: {\r\n        getRandomCategoryImage(category) {\r\n            // Assuming you have 10 images (1.jpg to 10.jpg) for each category\r\n            const randomImageNumber = Math.floor(Math.random() * 10) + 1;\r\n            return `../../public/${category}/${randomImageNumber}.jpg`; // Adjust the path to match your folder structure\r\n        },\r\n        fetchNews() {\r\n            console.log(\"in categories: \", this.category);\r\n            NewsService.getNewsType(this.category)\r\n                .then((response) => {\r\n                    console.log(\"in categories: service called\");\r\n                    console.log(response);\r\n                    this.articles = response.data;\r\n                    if (this.articles.length > 0) {\r\n                        // console.log(this.articles.at(1).title);\r\n                        console.log(this.articles[0].title);\r\n                        console.log(\"in categories: articles length > 0\");\r\n                        for (const article of this.articles) {\r\n                            if(!article.image){\r\n                                article.image = this.getRandomCategoryImage(this.category)\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error fetching data:\", error);\r\n                    console.log(\"in categories: error\");\r\n                });\r\n        },\r\n    },\r\n};\r\n</script>\r\n    \r\n<style>\r\n.navbar {\r\n    margin-top: -1.5cm;\r\n    background-color: black;\r\n\r\n}\r\n\r\n#item {\r\n    color: white;\r\n    font-size: 21px;\r\n    font-family: Major Mono Display;\r\n    padding-left: 1cm;\r\n\r\n}\r\n</style>"],"mappings":"AAWA,OAAOA,WAAU,MAAO,yBAAwB;AAChD,OAAOC,cAAa,MAAO,sBAAsB,EAAE;AACnD,eAAe;EACXC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,CAAC;MACfC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,UAAU,EAAE;IACRN;EACJ,CAAC;EACDO,OAAOA,CAAA,EAAG;IACNC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAI,CAACC,SAAS,CAAC,CAAC;EACpB,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACN,QAAO,GAAI,IAAI,CAACO,MAAM,CAACC,KAAK,CAACR,QAAQ;IAC1C;IACAG,OAAO,CAACC,GAAG,CAAE,sBAAqB,IAAI,CAACJ,QAAS,EAAC,CAAC;EACtD,CAAC;EAEDS,OAAO,EAAE;IACLC,sBAAsBA,CAACV,QAAQ,EAAE;MAC7B;MACA,MAAMW,iBAAgB,GAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;MAC5D,OAAQ,gBAAed,QAAS,IAAGW,iBAAkB,MAAK,EAAE;IAChE,CAAC;;IACDN,SAASA,CAAA,EAAG;MACRF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACJ,QAAQ,CAAC;MAC7CN,WAAW,CAACqB,WAAW,CAAC,IAAI,CAACf,QAAQ,EAChCgB,IAAI,CAAEC,QAAQ,IAAK;QAChBd,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5CD,OAAO,CAACC,GAAG,CAACa,QAAQ,CAAC;QACrB,IAAI,CAACnB,QAAO,GAAImB,QAAQ,CAACpB,IAAI;QAC7B,IAAI,IAAI,CAACC,QAAQ,CAACoB,MAAK,GAAI,CAAC,EAAE;UAC1B;UACAf,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,QAAQ,CAAC,CAAC,CAAC,CAACqB,KAAK,CAAC;UACnChB,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;UACjD,KAAK,MAAMgB,OAAM,IAAK,IAAI,CAACtB,QAAQ,EAAE;YACjC,IAAG,CAACsB,OAAO,CAACC,KAAK,EAAC;cACdD,OAAO,CAACC,KAAI,GAAI,IAAI,CAACX,sBAAsB,CAAC,IAAI,CAACV,QAAQ;YAC7D;UACJ;QACJ;MACJ,CAAC,EACAsB,KAAK,CAAEC,KAAK,IAAK;QACdpB,OAAO,CAACoB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CpB,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACvC,CAAC,CAAC;IACV;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}