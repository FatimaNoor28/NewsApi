{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9d5e847e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"category-selector\"\n}, [/*#__PURE__*/_createCommentVNode(\" Add buttons or links for categories here \")], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"news-cards\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_news_card = _resolveComponent(\"news-card\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.articles, article => {\n    return _openBlock(), _createBlock(_component_news_card, {\n      key: article.title,\n      article: article\n    }, null, 8 /* PROPS */, [\"article\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","articles","article","_createBlock","_component_news_card","key","title"],"sources":["C:\\Users\\fatima.noor\\Desktop\\NewsApi\\news-ui\\src\\components\\NewsList.vue"],"sourcesContent":["<!-- NewsList.vue -->\r\n<template>\r\n    <div>\r\n      <div class=\"category-selector\">\r\n        <!-- Add buttons or links for categories here -->\r\n      </div>\r\n      <div class=\"news-cards\">\r\n        <news-card v-for=\"article in articles\" :key=\"article.title\" :article=\"article\" />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import NewsCard from './NewsCard.vue';\r\n  import NewsService from '../services/NewsService.js';\r\n  export default {\r\n\r\n    name: 'NewsList',\r\n    components: {\r\n      NewsCard\r\n    },\r\n    data() {\r\n      return {\r\n        totalResults: 0,\r\n        articles: [] // Initialize with an empty array to store news data\r\n      };\r\n    },\r\n    mounted() {\r\n      // Fetch news data from your Spring Boot backend (you may need to set up an API endpoint for this)\r\n      // Once you have the data, update the 'articles' data property\r\n      this.fetchNewsData();\r\n    },\r\n    methods: {\r\n      fetchNewsData() {\r\n        NewsService.getNews()\r\n            .then((resppnse) => resppnse.json)\r\n            .then((response) => {\r\n              console.log(response);\r\n              this.totalResults = response.data.totalResults;\r\n              response.data.articles.forEach(element => {\r\n                this.articles.push(element);\r\n                console.log(element);\r\n              })\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            })\r\n\r\n            console.log(this.articles);\r\n        // .then((response) => {\r\n        //       this.articles = response.data;\r\n        //     })\r\n        //     .catch((error) => {\r\n        //       console.error('Error fetching news:', error);\r\n        //     });\r\n        },\r\n        // Make an HTTP request to your Spring Boot backend to fetch news data\r\n        // Update the 'articles' property with the fetched data\r\n      }\r\n    }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add styles for category selector and news cards container here */\r\n  .category-selector {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.category-selector button {\r\n  background-color: #007BFF;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.category-selector button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.news-cards {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n  </style>\r\n  "],"mappings":";;gEAGMA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAmB,I,aAC5BC,mBAAA,8CAAiD,C;;EAE9CD,KAAK,EAAC;AAAY;;;uBAJzBE,mBAAA,CAOM,cANJC,UAEM,EACNJ,mBAAA,CAEM,OAFNK,UAEM,I,kBADJF,mBAAA,CAAiFG,SAAA,QAAAC,WAAA,CAApDC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAzBC,YAAA,CAAiFC,oBAAA;MAAzCC,GAAG,EAAEH,OAAO,CAACI,KAAK;MAAGJ,OAAO,EAAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}