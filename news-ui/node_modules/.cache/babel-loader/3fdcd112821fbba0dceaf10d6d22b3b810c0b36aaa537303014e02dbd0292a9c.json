{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9d5e847e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"category-selector\"\n};\nconst _hoisted_2 = {\n  class: \"news-cards\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_news_card = _resolveComponent(\"news-card\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.getNewsType && $options.getNewsType(...args)),\n    class: \"btn btn-primary\",\n    style: {\n      \"outline-color\": \"rgb(82, 54, 20)\",\n      \"margin-left\": \"1cm\",\n      \"margin-top\": \"2cm\",\n      \"height\": \"1.5cm\",\n      \"width\": \"5cm\",\n      \"background-color\": \"#7da4ad\",\n      \"font-size\": \"21px\",\n      \"font-family\": \"'Times New Roman', Times, serif\"\n    }\n  }, \" Health News\"), _createCommentVNode(\" Add buttons or links for categories here \")]), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.articles, (article, index) => {\n    return _openBlock(), _createBlock(_component_news_card, {\n      key: index,\n      article: article\n    }, null, 8 /* PROPS */, [\"article\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" <news-card v-for=\\\"article in articles\\\" :key=\\\"article.title\\\" :article=\\\"article\\\" /> \")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","onClick","_cache","args","$options","getNewsType","style","_createCommentVNode","_hoisted_2","_Fragment","_renderList","$data","articles","article","index","_createBlock","_component_news_card","key"],"sources":["C:\\Users\\fatima.noor\\Desktop\\NewsApi-git\\news-ui\\src\\components\\NewsList.vue"],"sourcesContent":["<!-- NewsList.vue -->\r\n<template>\r\n  <div>\r\n    <div class=\"category-selector\">\r\n      <button @click=\"getNewsType\" class=\"btn btn-primary\"\r\n        style=\" outline-color: rgb(82, 54, 20);  margin-left:1cm; margin-top:2cm; height:1.5cm; width:5cm; background-color: #7da4ad; font-size:21px; font-family:'Times New Roman', Times, serif\">\r\n        Health News</button>\r\n      <!-- Add buttons or links for categories here -->\r\n    </div>\r\n    <div class=\"news-cards\">\r\n      <news-card v-for=\"(article, index) in articles\" :key=\"index\" :article=\"article\"></news-card>\r\n      <!-- <news-card v-for=\"article in articles\" :key=\"article.title\" :article=\"article\" /> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport NewsCard from './NewsCard.vue';\r\nimport NewsService from '../services/NewsService.js';\r\nexport default {\r\n\r\n  name: 'NewsList',\r\n  components: {\r\n    NewsCard\r\n  },\r\n  data() {\r\n    return {\r\n      totalResults: 0,\r\n      articles: [] // Initialize with an empty array to store news data\r\n    };\r\n  },\r\n  mounted() {\r\n    // Fetch news data from your Spring Boot backend (you may need to set up an API endpoint for this)\r\n    // Once you have the data, update the 'articles' data property\r\n    this.fetchNewsData();\r\n  },\r\n  methods: {\r\n    // openArticle(url) {\r\n    //   console.log(\"clicked on article\");\r\n    //   window.open(url);\r\n    // },\r\n    getNewsType() {\r\n      // Toggle the balance view\r\n      NewsService.getNewsType(\"health\")\r\n        .then((response) => {\r\n          this.articles = response.data; // Update articles data\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching health news:\", error);\r\n        });\r\n    },\r\n    fetchNewsData() {\r\n      NewsService.getNews()\r\n        .then((response) => {\r\n          if (response && response.data) {\r\n            // Check if response and response.data are defined\r\n            this.totalResults = response.data.totalResults;\r\n            this.articles = response.data;\r\n          } else {\r\n            console.error('Invalid API response:', response);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      // .then((response) => {\r\n      //       this.articles = response.data;\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       console.error('Error fetching news:', error);\r\n      //     });\r\n    },\r\n    // Make an HTTP request to your Spring Boot backend to fetch news data\r\n    // Update the 'articles' property with the fetched data\r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n/* Add styles for category selector and news cards container here */\r\n.category-selector {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.category-selector button {\r\n  background-color: #007BFF;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.category-selector button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.news-cards {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n</style>\r\n  "],"mappings":";;;EAGSA,KAAK,EAAC;AAAmB;;EAMzBA,KAAK,EAAC;AAAY;;;uBAPzBC,mBAAA,CAWM,cAVJC,mBAAA,CAKM,OALNC,UAKM,GAJJD,mBAAA,CAEsB;IAFbE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEN,KAAK,EAAC,iBAAiB;IAClDS,KAA0L,EAA1L;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;KAA2L,cAChL,GACbC,mBAAA,8CAAiD,C,GAEnDR,mBAAA,CAGM,OAHNS,UAGM,I,kBAFJV,mBAAA,CAA4FW,SAAA,QAAAC,WAAA,CAAtDC,KAAA,CAAAC,QAAQ,GAA3BC,OAAO,EAAEC,KAAK;yBAAjCC,YAAA,CAA4FC,oBAAA;MAA3CC,GAAG,EAAEH,KAAK;MAAGD,OAAO,EAAEA;;kCACvEN,mBAAA,6FAA0F,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}