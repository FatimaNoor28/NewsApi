{"ast":null,"code":"import NewsCard from './NewsCard.vue';\nimport NewsService from '../services/NewsService.js';\nexport default {\n  name: 'NewsList',\n  components: {\n    NewsCard\n  },\n  data() {\n    return {\n      totalResults: 0,\n      articles: [] // Initialize with an empty array to store news data\n    };\n  },\n\n  mounted() {\n    // Fetch news data from your Spring Boot backend (you may need to set up an API endpoint for this)\n    // Once you have the data, update the 'articles' data property\n    this.fetchNewsData();\n  },\n  methods: {\n    openArticle(url) {\n      window.open(url);\n    },\n    fetchNewsData() {\n      NewsService.getNews().then(response => {\n        if (response && response.data) {\n          // Check if response and response.data are defined\n          this.totalResults = response.data.totalResults;\n          this.articles = response.data;\n        } else {\n          console.error('Invalid API response:', response);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      // .then((response) => {\n      //       this.articles = response.data;\n      //     })\n      //     .catch((error) => {\n      //       console.error('Error fetching news:', error);\n      //     });\n    }\n    // Make an HTTP request to your Spring Boot backend to fetch news data\n    // Update the 'articles' property with the fetched data\n  }\n};","map":{"version":3,"names":["NewsCard","NewsService","name","components","data","totalResults","articles","mounted","fetchNewsData","methods","openArticle","url","window","open","getNews","then","response","console","error","catch","log"],"sources":["C:\\Users\\fatima.noor\\Desktop\\NewsApi\\news-ui\\src\\components\\NewsList.vue"],"sourcesContent":["<!-- NewsList.vue -->\r\n<template>\r\n  <div>\r\n    <div class=\"category-selector\">\r\n      <!-- Add buttons or links for categories here -->\r\n    </div>\r\n    <div class=\"news-cards\">\r\n      <news-card v-for=\"(article, index) in articles\" :key=\"index\" :article=\"article\"\r\n        @click=\"openArticle(article.url)\"></news-card>\r\n      <!-- <news-card v-for=\"article in articles\" :key=\"article.title\" :article=\"article\" /> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport NewsCard from './NewsCard.vue';\r\nimport NewsService from '../services/NewsService.js';\r\nexport default {\r\n\r\n  name: 'NewsList',\r\n  components: {\r\n    NewsCard\r\n  },\r\n  data() {\r\n    return {\r\n      totalResults: 0,\r\n      articles: [] // Initialize with an empty array to store news data\r\n    };\r\n  },\r\n  mounted() {\r\n    // Fetch news data from your Spring Boot backend (you may need to set up an API endpoint for this)\r\n    // Once you have the data, update the 'articles' data property\r\n    this.fetchNewsData();\r\n  },\r\n  methods: {\r\n    openArticle(url) {\r\n      window.open(url);\r\n    },\r\n    fetchNewsData() {\r\n      NewsService.getNews()\r\n        .then((response) => {\r\n          if (response && response.data) {\r\n            // Check if response and response.data are defined\r\n            this.totalResults = response.data.totalResults;\r\n            this.articles = response.data;\r\n          } else {\r\n            console.error('Invalid API response:', response);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      // .then((response) => {\r\n      //       this.articles = response.data;\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       console.error('Error fetching news:', error);\r\n      //     });\r\n    },\r\n    // Make an HTTP request to your Spring Boot backend to fetch news data\r\n    // Update the 'articles' property with the fetched data\r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n/* Add styles for category selector and news cards container here */\r\n.category-selector {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.category-selector button {\r\n  background-color: #007BFF;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.category-selector button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.news-cards {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n</style>\r\n  "],"mappings":"AAeA,OAAOA,QAAO,MAAO,gBAAgB;AACrC,OAAOC,WAAU,MAAO,4BAA4B;AACpD,eAAe;EAEbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,CAAC;MACfC,QAAQ,EAAE,EAAC,CAAE;IACf,CAAC;EACH,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR;IACA;IACA,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACC,GAAG,EAAE;MACfC,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC;IAClB,CAAC;IACDH,aAAaA,CAAA,EAAG;MACdP,WAAW,CAACa,OAAO,CAAC,EACjBC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAO,IAAKA,QAAQ,CAACZ,IAAI,EAAE;UAC7B;UACA,IAAI,CAACC,YAAW,GAAIW,QAAQ,CAACZ,IAAI,CAACC,YAAY;UAC9C,IAAI,CAACC,QAAO,GAAIU,QAAQ,CAACZ,IAAI;QAC/B,OAAO;UACLa,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,QAAQ,CAAC;QAClD;MACF,CAAC,EACAG,KAAK,CAAED,KAAK,IAAK;QAChBD,OAAO,CAACG,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC;MACH;MACA;MACA;MACA;MACA;MACA;IACF;IACA;IACA;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}